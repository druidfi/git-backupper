name: Backup

on:
  schedule:
    - cron:  '0 0 * * *' # UTC == 2 AM EET

jobs:

  backup:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Backup repositories from GitHub
        run: ${GITHUB_WORKSPACE}/backup.sh
        env:
          # PAT needs these scopes: read:org, repo
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_CLONE_MODE: https
          GH_OWNER: druidfi
          #GH_LIST_LIMIT: 3

      - name: List backups
        run: ls -lah ${GITHUB_WORKSPACE}/backups/

      - uses: actions/cache@v3
        with:
          path: backups
          key: backups-${{ github.run_id }}
          restore-keys: backups-

  sync:

    runs-on: ubuntu-latest
    needs: [ backup ]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: backups
          key: backups-${{ github.run_id }}

      - name: List backups
        run: ls -lah ${GITHUB_WORKSPACE}/backups/

      - name: Sync backups to S3
        run: ${GITHUB_WORKSPACE}/s3.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          cacheKeys=$(gh actions-cache list -R druidfi/git-backupper | cut -f 1)
          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          for cacheKey in $cacheKeys
          do
              gh actions-cache delete $cacheKey -R druidfi/git-backupper --confirm
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
